## **Homework for EPAM java course**  
Решения находятся в папке `src/`, задачи сопровождены readme с условиями.  
Для [задачи №6](https://github.com/alterG/javase01/tree/master/src/t06) добавлена видео-демонстрация, документацию можно [посмотреть онлайн](http://rubickcube.ru/epam/t06).    
- [X] Module #1
- [ ] Module #2  

**Опции JVM**  
 -XX:AutoBoxCacheMax=size (def 128) - увеличивает диапозон кэшируемых значений
 -XX:+OptimizeStringConcat (def off) - оптимизирует выделение памяти при многократной конкатенации (память выделяется только 1 раз)
```
StringBuilder().append(...).toString()
```
-XX:+UseCompressedStrings (def off) - включает сжатие строк (UTF-16 в ASCII). Минус - тратится время на контроль типов.
-XX:+UseCompressedOops (def on) - включить использование сжатых указателей (64 -> 32 бита), размер хипа равен 32 Гб (при выравнивании 8 байт). Уменьшает потребление памяти на 20-60%.
-XX:+UseStringCache - перед созданием строки пытается взять её из кэша. В jvm8 используются стандартно.
-Xmx1024M size(K,M,G) - максимальный размер хипа
-Xss512K size(K,M,G) - максимальный размер стека вызовов метода


**Codility.com**    
Решения находятся в папке `codility/lesson`, задачи сопровождены readme с условиями.  
- [X] BinaryGap
- [X] Arrays (2/2)
- [X] Time Complexity (3/3)
- [X] Counting Elements (4/4)
- [X] Prefix Sums (4/4)
- [ ] Sorting (0/4)

**Книги**
- [ ] Брюс Эккель - Философия Java `(162/1170)`  

**Доклады**  
* Вячеслав Круглов — Как начинающему Java-разработчику подружиться со своей базой данных? [ссылка](https://www.youtube.com/watch?v=dFASbaIG-UU) **(4/10)**
```
Оптимистичные, пессимистичные (read/write) блокировки, ORM, JPA, её реализации/провайдеры (Hibernate).  
```
* Владимир Иванов — G1 Garbage Collector. [ссылка](https://www.youtube.com/watch?v=iGRfyhE02lA) **(8/10)**
```
Слабая теория о поколениях, GC roots, STW-pause, object graph, Eden, FormSpace, ToSpace, Old Generation, Throughput-Latency-Footprint, STW-сборка против Инкрементальной, SerialGC, ParralelGC, CMS, G1б, -XX:+UseG1GC, -XX:MaxGCPauseMillis, -XX:GCPauseIntervalMillis.
```
* Егор Бугаенко — Объектно-ориентированное вранье. [ссылка](https://www.youtube.com/watch?v=lfdAwl3-X_c&t=3s) **(2/10)**
```
Getters, setters, static methods нарушают парадигму ООП, объект представляет самостоятельную живую сущность, которая берет на себя выполнение определенных задач, вместо "широких" классов нужно использовать много более конкретных.
```
*  Никита Сальников-Тарновский - Сколько занимают объекты Java в памяти. [ссылка](https://www.youtube.com/watch?v=raFDt883fFQ) **(6/10)**
```
Заголовок объекта (8 или 12 байт), выравнивание, хранение массивов, размер примитива и его обертки (Wrapper), заголовок устраняет неоднозначность в размере объектов, опасность использования коллекций (альтернатива TROOVE)
```
